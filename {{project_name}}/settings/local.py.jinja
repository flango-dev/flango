# https://docs.djangoproject.com/en/5.0/topics/settings/
# https://docs.djangoproject.com/en/5.0/ref/settings/
# https://docs.djangoproject.com/en/5.0/ref/exceptions/#module-django.core.exceptions

from pathlib import Path
from django.core.exceptions import ImproperlyConfigured

import environ

# https://github.com/joke2k/django-environ
env = environ.Env()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent

environ.Env.read_env(BASE_DIR / ".env")

# {{project_name}} - start
ADMIN_ENABLED = env("ADMIN_ENABLED", default=False)
MAIL_SERVER_AVAILABLE = env("MAIL_SERVER_AVAILABLE", default=False)
AUTH_VIA_OTP = env("AUTH_VIA_OTP", default=False)
if not MAIL_SERVER_AVAILABLE and AUTH_VIA_OTP:
    raise ImproperlyConfigured("Authentication with One-Time-Password requires a mail server.")
# {{project_name}} - end

SECRET_KEY = "insecure-django-secret-key"

DEBUG = env("DEBUG", default=False)

# https://docs.djangoproject.com/en/5.0/ref/settings/#allowed-hosts
ALLOWED_HOSTS = ["127.0.0.1"]

# Application definition
DJANGO_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
]
THIRD_PARTY_APPS = [
    "authtools",
    "allauth_ui",
    "allauth",
    "allauth.account",
    "allauth.socialaccount",  # required until https://github.com/danihodovic/django-allauth-ui/issues/44 fixed
    "widget_tweaks",
    "django_typer",
    "django_htmx",
    "django_tailwind_cli",
]
if DEBUG:
    THIRD_PARTY_APPS += [
        "dbbackup",
        "django_browser_reload",
    ]
PROJECT_APPS = [
    "landingpage",
]
BOUNDED_CONTEXTS_APPS = [
    # your bounded contexts
]
INSTALLED_APPS = DJANGO_APPS + THIRD_PARTY_APPS + PROJECT_APPS + BOUNDED_CONTEXTS_APPS

DJANGO_MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",  # third party needs to be here!
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]
THIRD_PARTY_MIDDLEWARE = [
    "django_htmx.middleware.HtmxMiddleware",
    "allauth.account.middleware.AccountMiddleware",
]
if DEBUG:
    THIRD_PARTY_MIDDLEWARE += [
        "django_browser_reload.middleware.BrowserReloadMiddleware",
    ]
MIDDLEWARE = DJANGO_MIDDLEWARE + THIRD_PARTY_MIDDLEWARE

ROOT_URLCONF = "{{project_name}}.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

ASGI_APPLICATION = "{{project_name}}.asgi.application"
WSGI_APPLICATION = "{{project_name}}.wsgi.application"

# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases
DATABASES = {
    "default": env.db_url(
        "DATABASES_DEFAULT_URL",
        default="sqlite:///" + str(BASE_DIR / "tmp" / "db.sqlite3"),
    )
}

# django-dbbackup
# https://django-dbbackup.readthedocs.io/en/master/configuration.html
DBBACKUP_STORAGE = "django.core.files.storage.FileSystemStorage"
DBBACKUP_STORAGE_OPTIONS = {"location": BASE_DIR / "bkp"}

# Auth
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth
AUTHENTICATION_BACKENDS = [
    "django.contrib.auth.backends.ModelBackend",
    "allauth.account.auth_backends.AuthenticationBackend",
]
AUTH_USER_MODEL = "authtools.User"
LOGIN_REDIRECT_URL = "/"
LOGIN_URL = "/accounts/login/"
LOGOUT_REDIRECT_URL = None
PASSWORD_RESET_TIMEOUT = 259200
PASSWORD_HASHERS = [
    "django.contrib.auth.hashers.PBKDF2PasswordHasher",
    "django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher",
    "django.contrib.auth.hashers.Argon2PasswordHasher",
    "django.contrib.auth.hashers.BCryptSHA256PasswordHasher",
    "django.contrib.auth.hashers.ScryptPasswordHasher",
]
AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# django-allauth (regular account)
# https://docs.allauth.org/en/latest/account/configuration.html
# https://docs.allauth.org/en/latest/socialaccount/configuration.html
if MAIL_SERVER_AVAILABLE:
    ACCOUNT_ADAPTER = "allauth.account.adapter.DefaultAccountAdapter"
    ACCOUNT_AUTHENTICATED_LOGIN_REDIRECTS = True
    ACCOUNT_AUTHENTICATION_METHOD = "email"
    ACCOUNT_CHANGE_EMAIL = True
    ACCOUNT_CONFIRM_EMAIL_ON_GET = False
    ACCOUNT_EMAIL_CONFIRMATION_ANONYMOUS_REDIRECT_URL = LOGIN_URL
    ACCOUNT_EMAIL_CONFIRMATION_AUTHENTICATED_REDIRECT_URL = None
    ACCOUNT_EMAIL_CONFIRMATION_EXPIRE_DAYS = 3
    ACCOUNT_EMAIL_CONFIRMATION_HMAC = True
    ACCOUNT_EMAIL_NOTIFICATIONS = True
    ACCOUNT_EMAIL_REQUIRED = True
    ACCOUNT_EMAIL_VERIFICATION = True
    # ACCOUNT_EMAIL_SUBJECT_PREFIX = "[Site] "
    ACCOUNT_EMAIL_UNKNOWN_ACCOUNTS = False
    # ACCOUNT_DEFAULT_HTTP_PROTOCOL = "http"
    ACCOUNT_EMAIL_MAX_LENGTH = 254
    ACCOUNT_MAX_EMAIL_ADDRESSES = None
    ACCOUNT_FORMS = {
        "add_email": "allauth.account.forms.AddEmailForm",
        "change_password": "allauth.account.forms.ChangePasswordForm",
        "confirm_login_code": "allauth.account.forms.ConfirmLoginCodeForm",
        "login": "allauth.account.forms.LoginForm",
        "request_login_code": "allauth.account.forms.RequestLoginCodeForm",
        "reset_password": "allauth.account.forms.ResetPasswordForm",
        "reset_password_from_key": "allauth.account.forms.ResetPasswordKeyForm",
        "set_password": "allauth.account.forms.SetPasswordForm",
        "signup": "allauth.account.forms.SignupForm",
        "user_token": "allauth.account.forms.UserTokenForm",
    }
    ACCOUNT_LOGIN_BY_CODE_ENABLED = False
    # ACCOUNT_LOGIN_BY_CODE_MAX_ATTEMPTS = 3
    # ACCOUNT_LOGIN_BY_CODE_TIMEOUT = 180
    ACCOUNT_LOGIN_ON_EMAIL_CONFIRMATION = False
    ACCOUNT_LOGOUT_ON_GET = False
    ACCOUNT_LOGOUT_ON_PASSWORD_CHANGE = True
    ACCOUNT_LOGIN_ON_PASSWORD_RESET = False
    ACCOUNT_LOGOUT_REDIRECT_URL = "/"
    ACCOUNT_PASSWORD_INPUT_RENDER_VALUE = False
    ACCOUNT_PASSWORD_RESET_TOKEN_GENERATOR = (
        "allauth.account.forms.EmailAwarePasswordResetTokenGenerator"
    )
    ACCOUNT_PRESERVE_USERNAME_CASING = True
    ACCOUNT_PREVENT_ENUMERATION = True
    # ACCOUNT_RATE_LIMITS = {...}
    ACCOUNT_REAUTHENTICATION_TIMEOUT = 300
    ACCOUNT_REAUTHENTICATION_REQUIRED = False
    ACCOUNT_SESSION_REMEMBER = False
    ACCOUNT_SIGNUP_EMAIL_ENTER_TWICE = True
    ACCOUNT_SIGNUP_FORM_CLASS = None
    ACCOUNT_SIGNUP_FORM_HONEYPOT_FIELD = None
    ACCOUNT_SIGNUP_PASSWORD_ENTER_TWICE = True
    ACCOUNT_SIGNUP_REDIRECT_URL = LOGIN_REDIRECT_URL
    ACCOUNT_TEMPLATE_EXTENSION = "html"
    ACCOUNT_USERNAME_BLACKLIST = []
    ACCOUNT_UNIQUE_EMAIL = True
    # ACCOUNT_USER_DISPLAY = user.username
    ACCOUNT_USER_MODEL_EMAIL_FIELD = "email"
    ACCOUNT_USER_MODEL_USERNAME_FIELD = "name"
    ACCOUNT_USERNAME_MIN_LENGTH = 1
    ACCOUNT_USERNAME_REQUIRED = True
    ACCOUNT_USERNAME_VALIDATORS = None
else:
    ACCOUNT_ADAPTER = "patches.allauth.NoEspAccountAdapter"
    ACCOUNT_AUTHENTICATED_LOGIN_REDIRECTS = True
    ACCOUNT_AUTHENTICATION_METHOD = "email"
    ACCOUNT_CHANGE_EMAIL = True
    ACCOUNT_CONFIRM_EMAIL_ON_GET = False
    ACCOUNT_EMAIL_CONFIRMATION_ANONYMOUS_REDIRECT_URL = LOGIN_URL
    ACCOUNT_EMAIL_CONFIRMATION_AUTHENTICATED_REDIRECT_URL = None
    ACCOUNT_EMAIL_CONFIRMATION_EXPIRE_DAYS = 3
    ACCOUNT_EMAIL_CONFIRMATION_HMAC = True
    ACCOUNT_EMAIL_NOTIFICATIONS = False
    ACCOUNT_EMAIL_REQUIRED = True
    ACCOUNT_EMAIL_VERIFICATION = "none"
    # ACCOUNT_EMAIL_SUBJECT_PREFIX = "[Site] "
    ACCOUNT_EMAIL_UNKNOWN_ACCOUNTS = False
    # ACCOUNT_DEFAULT_HTTP_PROTOCOL = "http"
    ACCOUNT_EMAIL_MAX_LENGTH = 254
    ACCOUNT_MAX_EMAIL_ADDRESSES = None
    ACCOUNT_FORMS = {
        "add_email": "allauth.account.forms.AddEmailForm",
        "change_password": "allauth.account.forms.ChangePasswordForm",
        "confirm_login_code": "allauth.account.forms.ConfirmLoginCodeForm",
        "login": "allauth.account.forms.LoginForm",
        "request_login_code": "allauth.account.forms.RequestLoginCodeForm",
        "reset_password": "allauth.account.forms.ResetPasswordForm",
        "reset_password_from_key": "allauth.account.forms.ResetPasswordKeyForm",
        "set_password": "allauth.account.forms.SetPasswordForm",
        "signup": "allauth.account.forms.SignupForm",
        "user_token": "allauth.account.forms.UserTokenForm",
    }
    ACCOUNT_LOGIN_BY_CODE_ENABLED = False
    ACCOUNT_LOGIN_BY_CODE_MAX_ATTEMPTS = 3
    ACCOUNT_LOGIN_BY_CODE_TIMEOUT = 180
    ACCOUNT_LOGIN_ON_EMAIL_CONFIRMATION = False
    ACCOUNT_LOGOUT_ON_GET = False
    ACCOUNT_LOGOUT_ON_PASSWORD_CHANGE = True
    ACCOUNT_LOGIN_ON_PASSWORD_RESET = False
    ACCOUNT_LOGOUT_REDIRECT_URL = "/"
    ACCOUNT_PASSWORD_INPUT_RENDER_VALUE = False
    ACCOUNT_PASSWORD_RESET_TOKEN_GENERATOR = (
        "allauth.account.forms.EmailAwarePasswordResetTokenGenerator"
    )
    ACCOUNT_PRESERVE_USERNAME_CASING = True
    ACCOUNT_PREVENT_ENUMERATION = True
    # ACCOUNT_RATE_LIMITS = {...}
    ACCOUNT_REAUTHENTICATION_TIMEOUT = 300
    ACCOUNT_REAUTHENTICATION_REQUIRED = False
    ACCOUNT_SESSION_REMEMBER = False
    ACCOUNT_SIGNUP_EMAIL_ENTER_TWICE = True
    ACCOUNT_SIGNUP_FORM_CLASS = None
    ACCOUNT_SIGNUP_FORM_HONEYPOT_FIELD = None
    ACCOUNT_SIGNUP_PASSWORD_ENTER_TWICE = True
    ACCOUNT_SIGNUP_REDIRECT_URL = LOGIN_REDIRECT_URL
    ACCOUNT_TEMPLATE_EXTENSION = "html"
    ACCOUNT_USERNAME_BLACKLIST = []
    ACCOUNT_UNIQUE_EMAIL = True
    # ACCOUNT_USER_DISPLAY = user.username
    ACCOUNT_USER_MODEL_EMAIL_FIELD = "email"
    ACCOUNT_USER_MODEL_USERNAME_FIELD = "name"
    ACCOUNT_USERNAME_MIN_LENGTH = 1
    ACCOUNT_USERNAME_REQUIRED = True
    ACCOUNT_USERNAME_VALIDATORS = None

# Email
# https://docs.djangoproject.com/en/5.0/ref/settings/#email-backend
if MAIL_SERVER_AVAILABLE:
    EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
    EMAIL_HOST = env("EMAIL_HOST")
    EMAIL_HOST_PASSWORD = env("EMAIL_HOST_PASSWORD")
    EMAIL_HOST_USER = env("EMAIL_HOST_USER")
    EMAIL_PORT = env("EMAIL_PORT")  # TLS: 587 / SSL: 465
    EMAIL_SUBJECT_PREFIX = "[{{project_name|upper}}] "
    EMAIL_USE_LOCALTIME = True
    raise ImproperlyConfigured("Configure either EMAIL_USE_TLS or EMAIL_USE_SSL (EMAIL_SSL_CERTFILE, EMAIL_SSL_KEYFILE) and adjust EMAIL_PORT accordingly.")
    EMAIL_USE_TLS = False
    EMAIL_USE_SSL = False
    # EMAIL_SSL_CERTFILE
    # EMAIL_SSL_KEYFILE
else:
    EMAIL_BACKEND = "django.core.mail.backends.console.EmailBackend"
    EMAIL_SUBJECT_PREFIX = "[{{project_name|upper}}] "
    EMAIL_USE_LOCALTIME = True
    EMAIL_USE_TLS = False
    EMAIL_USE_SSL = False

# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/
LANGUAGE_CODE = "en-us"
TIME_ZONE = "UTC"
USE_I18N = True
USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/
# https://docs.djangoproject.com/en/5.0/ref/contrib/staticfiles/#settings
# https://whitenoise.readthedocs.io/en/stable/django.html
STORAGES = {
    "default": {
        "BACKEND": "django.core.files.storage.FileSystemStorage",
    },
    "staticfiles": {
        "BACKEND": "whitenoise.storage.CompressedStaticFilesStorage",
    },
}
STATIC_ROOT = BASE_DIR / "staticfiles"
STATIC_URL = "/static/"
STATICFILES_DIRS = [
    BASE_DIR / "static",
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field
DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Tailwind CSS
# https://github.com/oliverandrich/django-tailwind-cli
TAILWIND_CLI_VERSION = "3.4.1"
TAILWIND_CLI_PATH = "~/.local/bin/"
TAILWIND_CLI_AUTOMATIC_DOWNLOAD = True
TAILWIND_CLI_SRC_CSS = None
TAILWIND_CLI_DIST_CSS = "css/tailwind.css"
TAILWIND_CLI_CONFIG_FILE = "tailwind.config.js"
